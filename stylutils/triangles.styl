@require 'funcs'

// ===============================================================================
// Triangles

// Usage:
//     .box::after {
//         _triangle(
//               $dir,       // <-- top, bottom, left, right.
//               $color,     // arrow color
//               $h,         // the "Length" of the arrow.
//               $w,         // total width of the arrow. (Defaults to twice the @height)
//               $pos,       // sideways placement along the edge of the container. (Defaults to 50%.)
//               $posFrom,   // edge from which the side-offset is calculated. (Defaults to left or top respectively.)
//               $shift      // shift along the "height" axis, away or towards the container. (Defaults to 0)
//             )
//     }
_triangle($dir=top, $color=#fff, $h=10px, $w=(2*$h), $pos=50%, $posFrom=null, $shift=0) {
    _triangleShape($dir, $color, $h, $w)
    // Do auto positioning
    if (!$posFrom) {
        $posFrom = ($dir==top or $dir==bottom) ? left : top
    }
    position: absolute
    {$dir}: -($h)
    {$posFrom}: $pos
    margin-{$dir}: -($shift)
}

_triangleShape($dir=top, $color=#fff, $h=10px, $w=(2*$h)) {
    content: '' // ensure ::before/::after works automatically
    display: inline-block
    width: 0
    height: 0
    min-width: 0
    min-height: 0
    border: 0 solid transparent
    if (isVertical($dir)) {
        border-width: $h ($w/2)
    } else {
        border-width: ($w/2) $h
    }
    border-{opposite-position($dir)}-color: $color
    border-{$dir}-width: 0
    if ($dir==top or $dir==bottom) {
        margin: 0 -($w/2)
    } else {
        margin: -($w/2) 0
    }
}

